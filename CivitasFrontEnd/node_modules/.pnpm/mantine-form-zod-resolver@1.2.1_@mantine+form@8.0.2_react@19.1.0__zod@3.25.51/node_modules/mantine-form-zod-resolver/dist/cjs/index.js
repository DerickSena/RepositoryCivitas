'use strict';

function zodResolver(schema, options) {
  return (values) => {
    const parsed = schema.safeParse(values);
    if (parsed.success) {
      return {};
    }
    const results = {};
    if ("error" in parsed) {
      if (options?.errorPriority === "first") {
        parsed.error.errors.reverse();
      }
      parsed.error.errors.forEach((error) => {
        results[error.path.join(".")] = error.message;
      });
    }
    return results;
  };
}
function zod4Resolver(schema, options) {
  return (values) => {
    const parsed = schema.safeParse(values);
    if (parsed.success) {
      return {};
    }
    const results = {};
    if ("error" in parsed) {
      if (options?.errorPriority === "first") {
        parsed.error.issues.reverse();
      }
      parsed.error.issues.forEach((error) => {
        results[error.path.join(".")] = error.message;
      });
    }
    return results;
  };
}

exports.zod4Resolver = zod4Resolver;
exports.zodResolver = zodResolver;
